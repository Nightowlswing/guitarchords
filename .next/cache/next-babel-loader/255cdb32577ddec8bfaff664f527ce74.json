{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/Login/Singup.jsx\";\nvar __jsx = React.createElement;\n//import { store } from 'react-notifications-component';\nimport React, { Component } from 'react';\nimport Link from 'next/link'; //import '../../styles/FormStyles/Form.css';\n\nimport { useRouter } from 'next/router';\nimport LoginStyle from './LoginStyle/LoginStyle.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\n\nvar formValid = function formValid(formErrors) {\n  var valid = true;\n\n  _Object$values(formErrors).forEach(function (val) {\n    val.length > 0 && (valid = false);\n  });\n\n  return valid;\n};\n\nvar nickRegex = RegExp(/[a-zA-Z_]$/);\nvar emeilRegex = RegExp(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/);\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isWaiting: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          isWaiting: false\n        });\n      }, 2000);\n\n      if (formValid(_this.state.formErrors)) {\n        _this.handleUserData(_this.state.email, _this.state.nickname, _this.state.password);\n      } else {\n        alert('FORM IS INVALID');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      e.preventDefault();\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      var formErrors = _this.state.formErrors;\n\n      switch (name) {\n        case 'Email':\n          formErrors.email = emeilRegex.test(value) && value.length > 6 ? \"\" : 'invalid email';\n\n          _this.setState({\n            email: value\n          });\n\n          break;\n\n        case 'Password':\n          formErrors.password = value.length < 6 ? 'minimum 6 characters' : \"\";\n\n          _this.setState({\n            password: value\n          });\n\n          break;\n\n        case 'Nickname':\n          formErrors.password = nickRegex.test(value) && value.length > 0 ? 'minimum 0 characters' : \"\";\n\n          _this.setState({\n            nickname: value\n          });\n\n          break;\n      }\n\n      _this.setState(_defineProperty({\n        formErrors: formErrors\n      }, name, value));\n    });\n\n    _this.state = {\n      email: null,\n      password: null,\n      nickname: null,\n      formErrors: {\n        email: \"\",\n        nickname: \"\",\n        password: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"handleUserData\",\n    value: function handleUserData(email, nick, pass) {\n      Axios.get('http://localhost:3210/singup', {\n        params: {\n          email: email,\n          nickname: nick,\n          password: pass\n        }\n      }).then(function (response) {\n        console.log(response.data.operationStatus);\n        if (response.data[0].opetationStatus == 'false') alert('Operation failed. User already exists');else {\n          alert('User has been created');\n        }\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"SingIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        onChange: this.handleChange,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, __jsx(Input, {\n        onChange: this.handleChange,\n        name: \"Email\",\n        placeholder: \"user@mail.com\",\n        type: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), __jsx(Input, {\n        onChange: this.handleChange,\n        name: \"Password\",\n        placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), __jsx(Input, {\n        onChange: this.handleChange,\n        name: \"Nickname\",\n        placeholder: \"superguitarist228\",\n        type: \"nickname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), __jsx(Button, {\n        divclassname: \"SingIn\",\n        buttonclassname: \"SubmitButton\",\n        type: \"submit\",\n        name: \"sing up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar Input = function Input(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"\".concat(props.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"FormLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, props.name), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"\".concat(props.type),\n    className: \"FormInput\",\n    placeholder: \"\".concat(props.placeholder),\n    name: \"\".concat(props.name),\n    noValidate: true,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })));\n};\n\nvar Button = function Button(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.divclassname),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"\".concat(props.buttonclassname),\n    type: \"\".concat(props.type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, props.name));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/Login/Singup.jsx"],"names":["React","Component","Link","useRouter","LoginStyle","FormText","Axios","formValid","formErrors","valid","forEach","val","length","nickRegex","RegExp","emeilRegex","Login","props","e","preventDefault","setState","isWaiting","setTimeout","state","handleUserData","email","nickname","password","alert","target","name","value","test","nick","pass","get","params","then","response","console","log","data","operationStatus","opetationStatus","error","handleSubmit","handleChange","Input","type","placeholder","Button","divclassname","buttonclassname"],"mappings":"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","sourcesContent":["//import { store } from 'react-notifications-component';\nimport React, { Component } from 'react'\nimport Link from 'next/link';\n//import '../../styles/FormStyles/Form.css';\nimport { useRouter } from 'next/router';\nimport LoginStyle from './LoginStyle/LoginStyle.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\n\nconst formValid = formErrors =>{\n    let valid = true;\n\n    Object.values(formErrors).forEach(val => {\n        val.length > 0 && (valid = false)\n    });\n\n    return valid;\n}\n\n\n\nconst nickRegex = RegExp(/[a-zA-Z_]$/);\nconst emeilRegex = RegExp(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/);\n\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            email: null,\n            password: null,\n            nickname: null,\n            formErrors:{\n                email: \"\",\n                nickname: \"\",\n                password: \"\"\n            }\n        };\n\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.setState({isWaiting: true}); \n\n        setTimeout(() => {\n            this.setState({isWaiting: false});\n        }, 2000)\n\n        if (formValid(this.state.formErrors)) {\n          this.handleUserData(this.state.email,this.state.nickname,this.state.password)\n        }\n        else {\n          alert('FORM IS INVALID');\n        }\n    };\n\n    handleChange = e => {\n        e.preventDefault();\n        const {name, value} = e.target;\n        let formErrors = this.state.formErrors;\n\n        switch(name) {\n            case 'Email':\n                formErrors.email = \n                    emeilRegex.test(value) && value.length > 6\n                        ?\"\"\n                        :'invalid email';\n                this.setState({email: value});\n                break;\n            case 'Password':\n                    formErrors.password = \n                        value.length < 6\n                            ?'minimum 6 characters'\n                            : \"\";\n                    this.setState({password: value});\n                break;\n            case 'Nickname':\n                formErrors.password = \n                nickRegex.test(value) && value.length > 0\n                        ?'minimum 0 characters'\n                        : \"\";\n                this.setState({nickname: value});\n            break;\n        }\n       \n        this.setState({formErrors, [name]: value});\n    }\n    \n    handleUserData(email, nick, pass){\n      Axios.get('http://localhost:3210/singup', {\n        params: {\n            email: email,    \n            nickname: nick,\n            password: pass\n        }\n        })\n        .then( (response) => {\n          console.log(response.data.operationStatus)\n        if(response.data[0].opetationStatus == 'false')\n            alert('Operation failed. User already exists')\n          else{\n             alert('User has been created')\n         }\n        }\n        )\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n\n    render(){\n        return(\n            <div className = 'SingIn'>\n                \n\n                <form onSubmit = {this.handleSubmit} onChange = {this.handleChange} noValidate>\n                  <Input onChange = {this.handleChange} name = 'Email' placeholder = 'user@mail.com' type = 'email'/>\n                  <Input onChange = {this.handleChange} name = 'Password' placeholder = '••••••••' type = 'password'/>\n                  <Input onChange = {this.handleChange} name = 'Nickname' placeholder = 'superguitarist228' type = 'nickname'/>\n                  <Button divclassname = 'SingIn' buttonclassname = 'SubmitButton' type = 'submit' name = 'sing up'/>\n                </form>\n                \n            </div>\n\n        );\n    }\n  }\n\n\nconst Input = props => (\n  <div>\n    <div className = {`${props.name}`}>\n        <label className= 'FormLabel'>{props.name}</label><br/>\n        <input \n        type = {`${props.type}`}\n        className = 'FormInput' \n        placeholder = {`${props.placeholder}`}\n        name = {`${props.name}`}\n        noValidate\n        onChange ={props.handleChange}\n        />\n    </div>\n  </div>\n  );\n\n  \n  const Button = props => (\n    <div className = {`${props.divclassname}`}>\n      <button className = {`${props.buttonclassname}`} type = {`${props.type}`}>{props.name}</button>\n    </div>\n  )\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}