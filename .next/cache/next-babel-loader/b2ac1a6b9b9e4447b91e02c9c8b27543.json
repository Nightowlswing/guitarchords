{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\nimport EditText from './EditText/editText';\n\nvar formValid = function formValid(formErrors) {\n  var valid = true;\n\n  _Object$values(formErrors).forEach(function (val) {\n    val.length > 0 && (valid = false);\n  });\n\n  return valid;\n};\n\nvar AddSong =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSong, _Component);\n\n  function AddSong(props) {\n    var _this;\n\n    _classCallCheck(this, AddSong);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddSong).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      console.log(EditText(_this.state.text));\n\n      if (formValid(_this.state.formErrors)) {\n        _this.handleSongData(_this.state.cname, _this.state.sname, _this.state.capo, EditText(_this.state.text), _this.state.genre);\n      } else {\n        alert('Songs data is INVALID');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      e.preventDefault();\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      var formErrors = _this.state.formErrors;\n\n      switch (name) {\n        case 'cname':\n          formErrors.cname = value.length > 0 ? \"\" : \"invalid compositors name\";\n\n          _this.setState({\n            cname: value\n          });\n\n          break;\n\n        case 'sname':\n          formErrors.sname = value.length > 0 ? \"\" : \"invalid sons name\";\n\n          _this.setState({\n            sname: value\n          });\n\n          break;\n\n        case 'capo':\n          formErrors.capo = value.length < 16 ? \"\" : \"invalid capo data\";\n\n          _this.setState({\n            capo: value\n          });\n\n          break;\n\n        case 'genre':\n          formErrors.genre = value.length > 0 ? \"\" : \"invalid genre\";\n\n          _this.setState({\n            genre: value\n          });\n\n          break;\n\n        case 'text':\n          formErrors.text = value.length > 255 ? \"\" : \"invalid text\";\n\n          _this.setState({\n            text: value\n          });\n\n          break;\n      }\n    });\n\n    _this.state = {\n      cname: null,\n      sname: null,\n      capo: null,\n      text: null,\n      genre: null,\n      formErrors: {\n        cname: \"\",\n        sname: \"\",\n        capo: \"\",\n        text: \"\",\n        genre: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddSong, [{\n    key: \"handleSongData\",\n    value: function handleSongData(cname, sname, capo, text, genre) {\n      e.preventDefault();\n      Axios.get('http://localhost:3210/addsong/', {\n        params: {\n          cname: cname,\n          sname: sname,\n          capo: capo,\n          genre: genre,\n          text: text\n        }\n      }).then(function (response) {//console.log(response.data)\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"whiteBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, __jsx(LineInput, {\n        onChange: this.handleChange,\n        type: \"compname\",\n        placeholder: \"Name of compositor\",\n        name: \"cname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        onChange: this.handleChange,\n        type: \"songname\",\n        placeholder: \"Name of song\",\n        name: \"sname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        onChange: this.handleChange,\n        type: \"capo\",\n        placeholder: \"Capo\",\n        name: \"capo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        onChange: this.handleChange,\n        type: \"genre\",\n        placeholder: \"Genre\",\n        name: \"genre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), __jsx(Button, {\n        divclassname: \"SingIn\",\n        buttonclassname: \"SubmitButton\",\n        type: \"submit\",\n        name: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), __jsx(TextInput, {\n        onChange: this.handleChange,\n        classdiv: \"textblock\",\n        classtext: \"classtext\",\n        placeholder: \"Song's Text\",\n        name: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddSong;\n}(Component);\n\nvar LineInput = function LineInput(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"FormLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, props.name), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"\".concat(props.type),\n    className: \"FormInput\",\n    placeholder: \"\".concat(props.placeholder),\n    name: \"\".concat(props.name),\n    noValidate: true,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }));\n};\n\nvar TextInput = function TextInput(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.classdiv),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    onChange: props.onChange,\n    className: \"\".concat(props.classtext),\n    name: \"text\",\n    placeholder: \"\".concat(props.placeholder),\n    cols: \"100\",\n    rows: \"40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }));\n};\n\nvar Button = function Button(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.divclassname),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"\".concat(props.buttonclassname),\n    type: \"\".concat(props.type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, props.name));\n};\n\nexport default AddSong;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx"],"names":["React","Component","Link","useRouter","FormText","Axios","EditText","formValid","formErrors","valid","forEach","val","length","AddSong","props","e","console","log","state","text","handleSongData","cname","sname","capo","genre","alert","preventDefault","target","name","value","setState","get","params","then","response","error","handleSubmit","handleChange","LineInput","type","placeholder","onChange","TextInput","classdiv","classtext","Button","divclassname","buttonclassname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\nimport EditText from './EditText/editText';\n\n\nconst formValid = formErrors =>{\n    let valid = true;\n\n    Object.values(formErrors).forEach(val => {\n        val.length > 0 && (valid = false)\n    });\n\n    return valid;\n}\n\nclass AddSong extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            cname: null,\n            sname: null,\n            capo: null,\n            text: null,\n            genre: null,\n            formErrors:{\n                cname: \"\",\n                sname: \"\",\n                capo: \"\",\n                text: \"\",\n                genre: \"\"\n            }\n        }\n    } \n    \n    handleSubmit = e => {\n        console.log(EditText(this.state.text));\n        if (formValid(this.state.formErrors)) {\n            this.handleSongData(this.state.cname,this.state.sname,this.state.capo,EditText(this.state.text),this.state.genre)\n          }\n          else {\n            alert('Songs data is INVALID');\n          }\n \n    };\n\n    handleSongData (cname,sname,capo,text,genre){\n        e.preventDefault();\n        Axios.get('http://localhost:3210/addsong/', {\n            params: {\n                cname: cname,\n                sname: sname,\n                capo: capo,\n                genre: genre,\n                text: text\n            }\n            })\n            .then( (response) => {\n              //console.log(response.data)\n            }\n            )\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    handleChange = e => {\n        e.preventDefault();\n        const {name, value} = e.target;\n        let formErrors = this.state.formErrors;\n        switch(name) {\n            case 'cname':\n                formErrors.cname = \n                    value.length > 0\n                        ?\"\"\n                        :\"invalid compositors name\";\n                this.setState({cname: value});\n                break;\n            case 'sname':\n                formErrors.sname = \n                    value.length > 0\n                        ?\"\"\n                        :\"invalid sons name\";\n                this.setState({sname: value});\n                break;\n            case 'capo':\n                formErrors.capo = \n                    value.length < 16\n                        ?\"\"\n                        :\"invalid capo data\";\n                this.setState({capo: value});\n            break;\n            case 'genre':\n                formErrors.genre = \n                    value.length > 0\n                        ?\"\"\n                        :\"invalid genre\";\n                this.setState({genre: value});\n            break;\n            case 'text':\n                formErrors.text = \n                    value.length > 255\n                        ?\"\"\n                        :\"invalid text\";\n                this.setState({text: value});\n            break;\n            \n        }   \n    }\n    \n    componentDidMount(){\n       // Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n    render(){\n        return(\n \n            <div className = \"whiteBlock\">\n                <form onSubmit = {this.handleSubmit}>\n                    <LineInput onChange = {this.handleChange} type = 'compname' placeholder = 'Name of compositor' name = 'cname'/>\n                    <LineInput onChange = {this.handleChange} type = 'songname' placeholder = 'Name of song' name = 'sname'/>\n                    <LineInput onChange = {this.handleChange} type = 'capo' placeholder = 'Capo' name = 'capo'/>\n                    <LineInput onChange = {this.handleChange} type = 'genre' placeholder = 'Genre' name = 'genre'/>\n                    <Button divclassname = 'SingIn' buttonclassname = 'SubmitButton' type = 'submit' name = 'submit'/>\n                    <TextInput onChange = {this.handleChange} classdiv = 'textblock' classtext = 'classtext' placeholder = \"Song's Text\" name = 'text'/>\n                </form>\n            </div>\n\n        );\n    }\n   \n}\n\nconst LineInput = props =>(\n    <div className = {`${props.name}`}>\n    <label className= 'FormLabel'>{props.name}</label><br/>\n    <input \n    type = {`${props.type}`}\n    className = 'FormInput' \n    placeholder = {`${props.placeholder}`}\n    name = {`${props.name}`}\n    noValidate\n    onChange ={props.onChange}\n    />\n</div>\n\n);\n\nconst TextInput = props =>(\n    <div className = {`${props.classdiv}`}>\n        <textarea onChange ={props.onChange} className = {`${props.classtext}`} name=\"text\" placeholder = {`${props.placeholder}`} cols=\"100\" rows=\"40\"/>\n    </div>\n);\n\nconst Button = props => (\n    <div className = {`${props.divclassname}`}>\n      <button className = {`${props.buttonclassname}`} type = {`${props.type}`}>{props.name}</button>\n    </div>\n  )\n\nexport default AddSong;"]},"metadata":{},"sourceType":"module"}