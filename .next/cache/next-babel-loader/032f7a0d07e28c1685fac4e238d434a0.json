{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\nimport EditText from './EditText/editText';\n\nvar AddSong =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSong, _Component);\n\n  function AddSong(props) {\n    var _this;\n\n    _classCallCheck(this, AddSong);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddSong).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n      console.log(_this.state.text);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      e.preventDefault();\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      switch (name) {\n        case 'cname':\n          _this.setState({\n            cname: value\n          });\n\n          break;\n\n        case 'sname':\n          _this.setState({\n            sname: value\n          });\n\n          break;\n\n        case 'capo':\n          _this.setState({\n            capo: value\n          });\n\n          break;\n\n        case 'genre':\n          _this.setState({\n            genre: value\n          });\n\n          break;\n\n        case 'text':\n          _this.setState({\n            text: value\n          });\n\n          break;\n          console.log(_this.state.value);\n      }\n    });\n\n    _this.state = {\n      cname: null,\n      sname: null,\n      capo: null,\n      text: null,\n      genre: null\n    };\n    return _this;\n  }\n\n  _createClass(AddSong, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"whiteBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(LineInput, {\n        onChange: this.onChange,\n        type: \"compname\",\n        placeholder: \"Name of compositor\",\n        name: \"cname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        onChange: this.onChange,\n        type: \"songname\",\n        placeholder: \"Name of song\",\n        name: \"sname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        onChange: this.onChange,\n        type: \"capo\",\n        placeholder: \"Capo\",\n        name: \"capo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        onChange: this.onChange,\n        type: \"genre\",\n        placeholder: \"Genre\",\n        name: \"genre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), __jsx(Button, {\n        divclassname: \"SingIn\",\n        buttonclassname: \"SubmitButton\",\n        type: \"submit\",\n        name: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), __jsx(TextInput, {\n        onChange: this.onChange,\n        classdiv: \"textblock\",\n        classtext: \"classtext\",\n        placeholder: \"Song's Text\",\n        name: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddSong;\n}(Component);\n\nvar LineInput = function LineInput(props) {\n  return __jsx(\"input\", {\n    type: \"\".concat(props.type),\n    className: \"FormInput\",\n    placeholder: \"\".concat(props.placeholder),\n    name: \"\".concat(props.name),\n    onChange: props.onChange,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  });\n};\n\nvar TextInput = function TextInput(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.classdiv),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    className: \"\".concat(props.classtext),\n    name: \"text\",\n    placeholder: \"\".concat(props.placeholder),\n    cols: \"100\",\n    rows: \"40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n};\n\nvar Button = function Button(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.divclassname),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"\".concat(props.buttonclassname),\n    type: \"\".concat(props.type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, props.name));\n};\n\nexport default AddSong;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx"],"names":["React","Component","Link","useRouter","FormText","Axios","EditText","AddSong","props","e","preventDefault","console","log","state","text","target","name","value","setState","cname","sname","capo","genre","handleSubmit","onChange","LineInput","type","placeholder","TextInput","classdiv","classtext","Button","divclassname","buttonclassname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\nimport EditText from './EditText/editText';\n\nclass AddSong extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            cname: null,\n            sname: null,\n            capo: null,\n            text: null,\n            genre: null\n        }\n    } \n    \n    handleSubmit = e => {\n        e.preventDefault();\n        console.log(this.state.text)\n    };\n\n    handleChange = e => {\n        e.preventDefault();\n        const {name, value} = e.target;\n        switch(name) {\n            case 'cname':\n                this.setState({cname: value});\n                break;\n            case 'sname':\n                this.setState({sname: value});\n                break;\n            case 'capo':\n                this.setState({capo: value});\n            break;\n            case 'genre':\n                this.setState({genre: value});\n            break;\n            case 'text':\n                this.setState({text: value});\n            break;\n            console.log(this.state.value)\n        }\n    }\n    \n    componentDidMount(){\n       // Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n    render(){\n        return(\n \n            <div className = \"whiteBlock\">\n                <form onSubmit = {this.handleSubmit}>\n                    <LineInput onChange = {this.onChange} type = 'compname' placeholder = 'Name of compositor' name = 'cname'/>\n                    <LineInput onChange = {this.onChange} type = 'songname' placeholder = 'Name of song' name = 'sname'/>\n                    <LineInput onChange = {this.onChange} type = 'capo' placeholder = 'Capo' name = 'capo'/>\n                    <LineInput onChange = {this.onChange} type = 'genre' placeholder = 'Genre' name = 'genre'/>\n                    <Button divclassname = 'SingIn' buttonclassname = 'SubmitButton' type = 'submit' name = 'submit'/>\n                    <TextInput onChange = {this.onChange} classdiv = 'textblock' classtext = 'classtext' placeholder = \"Song's Text\" name = 'text'/>\n                </form>\n            </div>\n\n        );\n    }\n   \n}\n\nconst LineInput = props =>(\n    <input \n    type = {`${props.type}`}\n    className = 'FormInput' \n    placeholder = {`${props.placeholder}`}\n    name = {`${props.name}`}\n    onChange = {props.onChange}\n    noValidate  \n    />\n\n);\n\nconst TextInput = props =>(\n    <div className = {`${props.classdiv}`}>\n        <textarea className = {`${props.classtext}`} name=\"text\" placeholder = {`${props.placeholder}`} cols=\"100\" rows=\"40\"/>\n    </div>\n);\n\nconst Button = props => (\n    <div className = {`${props.divclassname}`}>\n      <button className = {`${props.buttonclassname}`} type = {`${props.type}`}>{props.name}</button>\n    </div>\n  )\n\nexport default AddSong;"]},"metadata":{},"sourceType":"module"}