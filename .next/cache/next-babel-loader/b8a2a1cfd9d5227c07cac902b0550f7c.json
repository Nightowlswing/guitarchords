{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/Songs/Song.js\";\nvar __jsx = React.createElement;\nimport React, { Component, createElement } from 'react';\nimport './SongStyle/SongStyle.css';\nimport Axios from 'axios';\n\nclass Song extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tracks: []\n    };\n  }\n\n  GetProfiles() {\n    console.log(this.state);\n    Axios.get('http://localhost:3210/profile').then(response => {\n      this.setState({\n        tracks: response.data\n      });\n    });\n    console.log(this.state.tracks);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"songText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(SongHead, {\n      compName: \"Billie Eilish\",\n      name: \"All The Good Girls Go to Hell\",\n      capo: \"4th fret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.GetProfiles.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), this.state.tracks.map(value => {\n      return __jsx(SongText // adress = {value.adress}\n      , {\n        text: value.text // avatar = {value.avatar}\n        // email = {value.email}\n        // id = {value.id}\n        // name = {value.name}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nconst SongHead = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, props.compName), __jsx(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, props.name)), __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, __jsx(\"h6\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, \"Capo: \", props.capo)), __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \"----------------------------\"));\n\nconst SongText = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, props.text.map((value, index) => {\n  console.log(index);\n  return __jsx(SongVerse, {\n    verse: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  });\n}));\n\nconst SongVerse = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, props.verse.map((value, index) => {\n  return __jsx(SongLine, {\n    line: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  });\n}), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}));\n\nconst SongLine = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, props.line.map((value, index) => {\n  return __jsx(WordBlock, {\n    words: value.words,\n    chord: value.chord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  });\n})), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}));\n\nconst WordBlock = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, props.chord, props.words, __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}));\n\nexport default Song;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/Songs/Song.js"],"names":["React","Component","createElement","Axios","Song","constructor","props","state","tracks","GetProfiles","console","log","get","then","response","setState","data","render","bind","map","value","text","SongHead","compName","name","capo","SongText","index","SongVerse","verse","SongLine","line","words","chord","WordBlock"],"mappings":"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","sourcesContent":["import React, {Component, createElement} from 'react';\nimport './SongStyle/SongStyle.css';\nimport Axios from 'axios';\n\n\nclass Song extends Component{\n      constructor(props){\n        super(props)\n        this.state = {\n          tracks: []\n        }\n      }\n\n      \n      \n      GetProfiles() {\n        console.log(this.state);\n        Axios.get('http://localhost:3210/profile').then ((response) => { this.setState({tracks: response.data})});\n        console.log(this.state.tracks);\n      }\n      render(){\n        \n      return(\n        <div className = \"songText\">\n            <SongHead compName = 'Billie Eilish' name = 'All The Good Girls Go to Hell' capo = '4th fret'/>\n            <button onClick = {this.GetProfiles.bind(this)}/>\n                {this.state.tracks.map((value) => {\n                    return (\n                        <SongText\n                       // adress = {value.adress}\n                        text = {value.text}    // avatar = {value.avatar}\n                            // email = {value.email}\n                            // id = {value.id}\n                           // name = {value.name}\n                        />\n                    );\n                })}\n        </div>\n      );\n    }\n    \n}\n  \nconst SongHead = props =>(\n    <div>\n        <span><h1>{props.compName}</h1>\n        <h3>{props.name}</h3></span>\n        <span><h6>Capo: {props.capo}</h6></span>\n        <span>----------------------------</span>\n    </div>\n);\n\nconst SongText = props =>(\n  <div>\n    {props.text.map((value, index) => {console.log(index)\n      return(\n        <SongVerse verse = {value}/>\n      );\n    })}\n  </div>\n)\n\nconst SongVerse = props =>(\n    <div>\n      {props.verse.map((value,index)=>{\n        return (\n          <SongLine line = {value}/>\n        );\n      })}\n      <br/><br/>\n    </div>\n);\n\nconst SongLine = props =>(\n  <div>\n    <span>\n    {props.line.map((value,index) =>{\n      return(\n        <WordBlock words = {value.words} chord = {value.chord}/>\n      );\n    })}\n\n    </span>\n    <br/>\n  </div>\n);\n\nconst WordBlock = props =>(\n  <div>\n    {props.chord}\n    {props.words}\n    <br/>\n  </div>\n);\nexport default Song;\n\n"]},"metadata":{},"sourceType":"module"}