{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/Compositors/CompList.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component, createElement } from 'react';\nimport '../../Styles/SongStyle/SongStyle.css';\nimport Axios from 'axios';\nimport Link from 'next/link';\n\nclass CompList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songs: [],\n      comp: []\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:3210/allComp').then(response => {\n      this.setState({\n        songs: response.data\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.state.songs.map(value => {\n      if (value.id == undefined) {\n        return __jsx(SongRef, {\n          id: value.id,\n          cname: value.cname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      } else {\n        return 'No songs';\n      }\n    }));\n  }\n\n}\n\nconst SongRef = props => __jsx(Link, {\n  href: \"/CompPages/[comp]/\",\n  as: `/CompPages/${props.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, props.cname)));\n\nexport default CompList;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/Compositors/CompList.jsx"],"names":["React","Component","createElement","Axios","Link","CompList","constructor","props","state","songs","comp","componentDidMount","get","then","response","setState","data","render","map","value","id","undefined","cname","SongRef"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,aAA1B,QAA8C,OAA9C;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAgC;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAE;AACfR,IAAAA,KAAK,CAACS,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAkDC,QAAD,IAAc;AAAE,WAAKC,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEK,QAAQ,CAACE;AAAjB,OAAd;AAAsC,KAAvG;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAsBC,KAAD,IAAW;AAC7B,UAAGA,KAAK,CAACC,EAAN,IAAYC,SAAf,EAAyB;AACrB,eACI,MAAC,OAAD;AACA,UAAA,EAAE,EAAIF,KAAK,CAACC,EADZ;AAEA,UAAA,KAAK,EAAID,KAAK,CAACG,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,OAPD,MAQI;AACA,eAAO,UAAP;AACH;AAEJ,KAbA,CADL,CADJ;AAkBH;;AA9B2B;;AAqChC,MAAMC,OAAO,GAAGhB,KAAK,IACjB,MAAC,IAAD;AAAM,EAAA,IAAI,EAAG,oBAAb;AAAkC,EAAA,EAAE,EAAI,cAAaA,KAAK,CAACa,EAAG,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIb,KAAK,CAACe,KAAV,CAAJ,CADJ,CADJ;;AAMA,eAAejB,QAAf","sourcesContent":["import React, {Component, createElement} from 'react';\nimport '../../Styles/SongStyle/SongStyle.css';\nimport Axios from 'axios';\nimport Link from 'next/link';\n\n\nclass CompList extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n          songs: [],\n          comp: []\n        }\n    }     \n    componentDidMount(){\n        Axios.get('http://localhost:3210/allComp').then ((response) => { this.setState({songs: response.data})});\n    }\n    render(){\n        return(\n            <ul>\n                {this.state.songs.map((value) => {\n                    if(value.id == undefined){\n                        return (                       \n                            <SongRef\n                            id = {value.id}\n                            cname = {value.cname}\n                            />\n                        );\n                    }\n                    else{\n                        return 'No songs';\n                    }\n\n                })}\n            </ul>\n        );\n    }\n\n    \n    \n}\n\n\nconst SongRef = props =>(\n    <Link href = '/CompPages/[comp]/' as ={`/CompPages/${props.id}`}>\n        <li><a>{props.cname}</a></li>\n    </Link>\n);\n\nexport default CompList;"]},"metadata":{},"sourceType":"module"}