{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/Songs/Song.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component, createElement } from 'react';\nimport './SongStyle/SongStyle.css';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router';\n\nvar Song =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Song, _Component);\n\n  function Song(props) {\n    var _this;\n\n    _classCallCheck(this, Song);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Song).call(this, props));\n    _this.state = {\n      song: [],\n      data: null\n    };\n    return _this;\n  }\n\n  _createClass(Song, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //const router = useRouter()\n      //console.log(router.query)\n      Axios.get('http://localhost:3210/song', {\n        params: {\n          id: 1\n        }\n      }).then(function (response) {\n        _this2.setState({\n          song: response.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const router = useRouter()\n      //const {id} = router.query\n      return __jsx(\"div\", {\n        className: \"songText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(SongHead, {\n        compName: \"Billie Eilish\",\n        name: \"All The Good Girls Go to Hell\",\n        capo: \"4th fret\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), this.state.song.map(function (value) {\n        return __jsx(SongText, {\n          text: value.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Song;\n}(Component);\n\nvar SongHead = function SongHead(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.compName), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.name)), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Capo: \", props.capo)), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"----------------------------\"));\n};\n\nvar SongText = function SongText(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.text.map(function (value, index) {\n    return __jsx(SongVerse, {\n      verse: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }));\n};\n\nvar SongVerse = function SongVerse(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, props.verse.map(function (value, index) {\n    return __jsx(SongLine, {\n      line: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n};\n\nvar SongLine = function SongLine(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.line.map(function (value, index) {\n    return __jsx(WordBlock, {\n      words: value.words,\n      chord: value.chord,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }));\n};\n\nvar WordBlock = function WordBlock(props) {\n  return __jsx(\"div\", {\n    className: \"word\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.chord, __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), props.words, \"\\xA0\", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n};\n\nexport default Song;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/Songs/Song.jsx"],"names":["React","Component","createElement","Axios","useRouter","Song","props","state","song","data","get","params","id","then","response","setState","map","value","text","SongHead","compName","name","capo","SongText","index","SongVerse","verse","SongLine","line","words","chord","WordBlock"],"mappings":"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","sourcesContent":["import React, {Component, createElement} from 'react';\nimport './SongStyle/SongStyle.css';\nimport Axios from 'axios';\nimport { useRouter } from 'next/router'\n\n\nclass Song extends Component{\n      constructor(props){\n\n        super(props)\n        this.state = {\n          song: [],\n          data: null\n        }\n      }     \n      \n      componentDidMount(){\n        //const router = useRouter()\n        //console.log(router.query)\n        Axios.get('http://localhost:3210/song', {\n          params: {\n            id:1\n          }\n          \n        }).then ((response) => { \n          this.setState({song: response.data})});   \n      }\n      render(){\n       // const router = useRouter()\n        //const {id} = router.query\n      return(\n        <div className = \"songText\">\n            <SongHead compName   = 'Billie Eilish' name = 'All The Good Girls Go to Hell' capo = '4th fret'/>\n            {/* <button onClick = {this.GetProfiles.bind(this)}/> */}\n            \n                {this.state.song.map((value) => {\n                    return (\n                        <SongText\n                        text = {value.text}\n                        />\n                    );\n                })}\n        </div>\n      );\n    }\n    \n}\n  \nconst SongHead = props =>(\n    <div>\n        <span><h1>{props.compName}</h1>\n        <h3>{props.name}</h3></span>\n        <span><h6>Capo: {props.capo}</h6></span>\n        <span>----------------------------</span>\n    </div>\n);\n\nconst SongText = props =>(\n  <div>\n    {props.text.map((value, index) => {\n      return(\n        <SongVerse verse = {value}/>\n      );\n    })}\n  </div>\n)\n\nconst SongVerse = props =>(\n    <div>\n      {props.verse.map((value,index)=>{\n        return (\n          <SongLine line = {value}/>\n        );\n      })}\n      <br/><br/>\n    </div>\n);\n\nconst SongLine = props =>(\n  <div>\n    <span>\n    {props.line.map((value,index) =>{\n      return(\n        <WordBlock words = {value.words} chord = {value.chord}/>\n      );\n    })}\n\n    </span>\n    <br/>\n  </div>\n);\n\nconst WordBlock = props =>(\n  <div className = \"word\">\n    {props.chord}<br/>\n    {props.words}&nbsp;\n    <br/>\n  </div>\n);\nexport default Song;\n\n"]},"metadata":{},"sourceType":"module"}