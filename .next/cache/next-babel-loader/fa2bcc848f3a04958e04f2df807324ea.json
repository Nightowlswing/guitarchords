{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\nimport EditText from './EditText/editText';\n\nvar AddSong =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSong, _Component);\n\n  function AddSong(props) {\n    var _this;\n\n    _classCallCheck(this, AddSong);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddSong).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n      console.log(EditText(_this.state.text));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      e.preventDefault();\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      switch (name) {\n        case 'cname':\n          _this.setState({\n            cname: value\n          });\n\n          break;\n\n        case 'sname':\n          _this.setState({\n            sname: value\n          });\n\n          break;\n\n        case 'capo':\n          _this.setState({\n            capo: value\n          });\n\n          break;\n\n        case 'genre':\n          _this.setState({\n            genre: value\n          });\n\n          break;\n\n        case 'text':\n          _this.setState({\n            text: value\n          });\n\n          break;\n      }\n    });\n\n    _this.state = {\n      cname: null,\n      sname: null,\n      capo: null,\n      text: null,\n      genre: null,\n      formErrors: {\n        cname: \"\",\n        sname: \"\",\n        capo: \"\",\n        text: \"\",\n        genre: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddSong, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"whiteBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(LineInput, {\n        onChange: this.handleChange,\n        type: \"compname\",\n        placeholder: \"Name of compositor\",\n        name: \"cname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        onChange: this.handleChange,\n        type: \"songname\",\n        placeholder: \"Name of song\",\n        name: \"sname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        onChange: this.handleChange,\n        type: \"capo\",\n        placeholder: \"Capo\",\n        name: \"capo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        onChange: this.handleChange,\n        type: \"genre\",\n        placeholder: \"Genre\",\n        name: \"genre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), __jsx(Button, {\n        divclassname: \"SingIn\",\n        buttonclassname: \"SubmitButton\",\n        type: \"submit\",\n        name: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), __jsx(TextInput, {\n        onChange: this.handleChange,\n        classdiv: \"textblock\",\n        classtext: \"classtext\",\n        placeholder: \"Song's Text\",\n        name: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddSong;\n}(Component);\n\nvar LineInput = function LineInput(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"FormLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.name), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"\".concat(props.type),\n    className: \"FormInput\",\n    placeholder: \"\".concat(props.placeholder),\n    name: \"\".concat(props.name),\n    noValidate: true,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n};\n\nvar TextInput = function TextInput(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.classdiv),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    onChange: props.onChange,\n    className: \"\".concat(props.classtext),\n    name: \"text\",\n    placeholder: \"\".concat(props.placeholder),\n    cols: \"100\",\n    rows: \"40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }));\n};\n\nvar Button = function Button(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.divclassname),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"\".concat(props.buttonclassname),\n    type: \"\".concat(props.type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, props.name));\n};\n\nexport default AddSong;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx"],"names":["React","Component","Link","useRouter","FormText","Axios","EditText","AddSong","props","e","preventDefault","console","log","state","text","target","name","value","setState","cname","sname","capo","genre","formErrors","handleSubmit","handleChange","LineInput","type","placeholder","onChange","TextInput","classdiv","classtext","Button","divclassname","buttonclassname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\nimport EditText from './EditText/editText';\n\nclass AddSong extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            cname: null,\n            sname: null,\n            capo: null,\n            text: null,\n            genre: null,\n            formErrors:{\n                cname: \"\",\n                sname: \"\",\n                capo: \"\",\n                text: \"\",\n                genre: \"\"\n            }\n        }\n    } \n    \n    handleSubmit = e => {\n        e.preventDefault();\n        console.log(EditText(this.state.text));\n \n    };\n\n    handleChange = e => {\n        e.preventDefault();\n        const {name, value} = e.target;\n        switch(name) {\n            case 'cname':\n                this.setState({cname: value});\n                break;\n            case 'sname':\n                this.setState({sname: value});\n                break;\n            case 'capo':\n                this.setState({capo: value});\n            break;\n            case 'genre':\n                this.setState({genre: value});\n            break;\n            case 'text':\n                this.setState({text: value});\n            break;\n            \n        }   \n    }\n    \n    componentDidMount(){\n       // Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n    render(){\n        return(\n \n            <div className = \"whiteBlock\">\n                <form onSubmit = {this.handleSubmit}>\n                    <LineInput onChange = {this.handleChange} type = 'compname' placeholder = 'Name of compositor' name = 'cname'/>\n                    <LineInput onChange = {this.handleChange} type = 'songname' placeholder = 'Name of song' name = 'sname'/>\n                    <LineInput onChange = {this.handleChange} type = 'capo' placeholder = 'Capo' name = 'capo'/>\n                    <LineInput onChange = {this.handleChange} type = 'genre' placeholder = 'Genre' name = 'genre'/>\n                    <Button divclassname = 'SingIn' buttonclassname = 'SubmitButton' type = 'submit' name = 'submit'/>\n                    <TextInput onChange = {this.handleChange} classdiv = 'textblock' classtext = 'classtext' placeholder = \"Song's Text\" name = 'text'/>\n                </form>\n            </div>\n\n        );\n    }\n   \n}\n\nconst LineInput = props =>(\n    <div className = {`${props.name}`}>\n    <label className= 'FormLabel'>{props.name}</label><br/>\n    <input \n    type = {`${props.type}`}\n    className = 'FormInput' \n    placeholder = {`${props.placeholder}`}\n    name = {`${props.name}`}\n    noValidate\n    onChange ={props.onChange}\n    />\n</div>\n\n);\n\nconst TextInput = props =>(\n    <div className = {`${props.classdiv}`}>\n        <textarea onChange ={props.onChange} className = {`${props.classtext}`} name=\"text\" placeholder = {`${props.placeholder}`} cols=\"100\" rows=\"40\"/>\n    </div>\n);\n\nconst Button = props => (\n    <div className = {`${props.divclassname}`}>\n      <button className = {`${props.buttonclassname}`} type = {`${props.type}`}>{props.name}</button>\n    </div>\n  )\n\nexport default AddSong;"]},"metadata":{},"sourceType":"module"}