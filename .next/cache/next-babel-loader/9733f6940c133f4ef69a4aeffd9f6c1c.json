{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\nimport EditText from './EditText/editText';\n\nconst formValid = formErrors => {\n  let valid = true;\n\n  _Object$values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  return valid;\n};\n\nclass AddSong extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      console.log(EditText(this.state.text));\n\n      if (formValid(this.state.formErrors)) {\n        this.handleSongData(this.state.cname, this.state.sname, this.state.capo, this.state.text, this.state.genre);\n      } else {\n        alert('Songs data is INVALID');\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case 'cname':\n          formErrors.cname = value.length > 0 ? \"\" : \"invalid compositors name\";\n          this.setState({\n            cname: value\n          });\n          break;\n\n        case 'sname':\n          formErrors.sname = value.length > 0 ? \"\" : \"invalid sons name\";\n          this.setState({\n            sname: value\n          });\n          break;\n\n        case 'capo':\n          formErrors.capo = value.length < 16 ? \"\" : \"invalid capo data\";\n          this.setState({\n            capo: value\n          });\n          break;\n\n        case 'genre':\n          formErrors.genre = value.length > 0 ? \"\" : \"invalid genre\";\n          this.setState({\n            genre: value\n          });\n          break;\n\n        case 'text':\n          formErrors.text = value.length > 255 ? \"\" : \"invalid text\";\n          this.setState({\n            text: value\n          });\n          break;\n      }\n    });\n\n    this.state = {\n      cname: null,\n      sname: null,\n      capo: null,\n      text: null,\n      genre: null,\n      formErrors: {\n        cname: \"\",\n        sname: \"\",\n        capo: \"\",\n        text: \"\",\n        genre: \"\"\n      }\n    };\n  }\n\n  handleSongData(cname, sname, capo, text, genre) {\n    e.preventDefault();\n    Axios.get('http://localhost:3210/addsong/', {\n      params: {\n        cname: cname,\n        sname: sname,\n        capo: capo,\n        text: text,\n        genre: genre\n      }\n    }).then(response => {\n      console.log(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {// Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"whiteBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(LineInput, {\n      onChange: this.handleChange,\n      type: \"compname\",\n      placeholder: \"Name of compositor\",\n      name: \"cname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), __jsx(LineInput, {\n      onChange: this.handleChange,\n      type: \"songname\",\n      placeholder: \"Name of song\",\n      name: \"sname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), __jsx(LineInput, {\n      onChange: this.handleChange,\n      type: \"capo\",\n      placeholder: \"Capo\",\n      name: \"capo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), __jsx(LineInput, {\n      onChange: this.handleChange,\n      type: \"genre\",\n      placeholder: \"Genre\",\n      name: \"genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), __jsx(Button, {\n      divclassname: \"SingIn\",\n      buttonclassname: \"SubmitButton\",\n      type: \"submit\",\n      name: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), __jsx(TextInput, {\n      onChange: this.handleChange,\n      classdiv: \"textblock\",\n      classtext: \"classtext\",\n      placeholder: \"Song's Text\",\n      name: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst LineInput = props => __jsx(\"div\", {\n  className: `${props.name}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}, __jsx(\"label\", {\n  className: \"FormLabel\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}, props.name), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}), __jsx(\"input\", {\n  type: `${props.type}`,\n  className: \"FormInput\",\n  placeholder: `${props.placeholder}`,\n  name: `${props.name}`,\n  noValidate: true,\n  onChange: props.onChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139\n  },\n  __self: this\n}));\n\nconst TextInput = props => __jsx(\"div\", {\n  className: `${props.classdiv}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}, __jsx(\"textarea\", {\n  onChange: props.onChange,\n  className: `${props.classtext}`,\n  name: \"text\",\n  placeholder: `${props.placeholder}`,\n  cols: \"100\",\n  rows: \"40\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n}));\n\nconst Button = props => __jsx(\"div\", {\n  className: `${props.divclassname}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, __jsx(\"button\", {\n  className: `${props.buttonclassname}`,\n  type: `${props.type}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}, props.name));\n\nexport default AddSong;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx"],"names":["React","Component","Link","useRouter","FormText","Axios","EditText","formValid","formErrors","valid","forEach","val","length","AddSong","constructor","props","e","console","log","state","text","handleSongData","cname","sname","capo","genre","alert","preventDefault","name","value","target","setState","get","params","then","response","data","catch","error","componentDidMount","render","handleSubmit","handleChange","LineInput","type","placeholder","onChange","TextInput","classdiv","classtext","Button","divclassname","buttonclassname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\nimport EditText from './EditText/editText';\n\n\nconst formValid = formErrors =>{\n    let valid = true;\n\n    Object.values(formErrors).forEach(val => {\n        val.length > 0 && (valid = false)\n    });\n\n    return valid;\n}\n\nclass AddSong extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            cname: null,\n            sname: null,\n            capo: null,\n            text: null,\n            genre: null,\n            formErrors:{\n                cname: \"\",\n                sname: \"\",\n                capo: \"\",\n                text: \"\",\n                genre: \"\"\n            }\n        }\n    } \n    \n    handleSubmit = e => {\n        console.log(EditText(this.state.text));\n        if (formValid(this.state.formErrors)) {\n            this.handleSongData(this.state.cname,this.state.sname,this.state.capo,this.state.text,this.state.genre)\n          }\n          else {\n            alert('Songs data is INVALID');\n          }\n \n    };\n\n    handleSongData (cname,sname,capo,text,genre){\n        e.preventDefault();\n        Axios.get('http://localhost:3210/addsong/', {\n            params: {\n                cname: cname,\n                sname: sname,\n                capo: capo,\n                text: text,\n                genre: genre\n            }\n            })\n            .then( (response) => {\n              console.log(response.data)\n            }\n            )\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    handleChange = e => {\n        e.preventDefault();\n        const {name, value} = e.target;\n        let formErrors = this.state.formErrors;\n        switch(name) {\n            case 'cname':\n                formErrors.cname = \n                    value.length > 0\n                        ?\"\"\n                        :\"invalid compositors name\";\n                this.setState({cname: value});\n                break;\n            case 'sname':\n                formErrors.sname = \n                    value.length > 0\n                        ?\"\"\n                        :\"invalid sons name\";\n                this.setState({sname: value});\n                break;\n            case 'capo':\n                formErrors.capo = \n                    value.length < 16\n                        ?\"\"\n                        :\"invalid capo data\";\n                this.setState({capo: value});\n            break;\n            case 'genre':\n                formErrors.genre = \n                    value.length > 0\n                        ?\"\"\n                        :\"invalid genre\";\n                this.setState({genre: value});\n            break;\n            case 'text':\n                formErrors.text = \n                    value.length > 255\n                        ?\"\"\n                        :\"invalid text\";\n                this.setState({text: value});\n            break;\n            \n        }   \n    }\n    \n    componentDidMount(){\n       // Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n    render(){\n        return(\n \n            <div className = \"whiteBlock\">\n                <form onSubmit = {this.handleSubmit}>\n                    <LineInput onChange = {this.handleChange} type = 'compname' placeholder = 'Name of compositor' name = 'cname'/>\n                    <LineInput onChange = {this.handleChange} type = 'songname' placeholder = 'Name of song' name = 'sname'/>\n                    <LineInput onChange = {this.handleChange} type = 'capo' placeholder = 'Capo' name = 'capo'/>\n                    <LineInput onChange = {this.handleChange} type = 'genre' placeholder = 'Genre' name = 'genre'/>\n                    <Button divclassname = 'SingIn' buttonclassname = 'SubmitButton' type = 'submit' name = 'submit'/>\n                    <TextInput onChange = {this.handleChange} classdiv = 'textblock' classtext = 'classtext' placeholder = \"Song's Text\" name = 'text'/>\n                </form>\n            </div>\n\n        );\n    }\n   \n}\n\nconst LineInput = props =>(\n    <div className = {`${props.name}`}>\n    <label className= 'FormLabel'>{props.name}</label><br/>\n    <input \n    type = {`${props.type}`}\n    className = 'FormInput' \n    placeholder = {`${props.placeholder}`}\n    name = {`${props.name}`}\n    noValidate\n    onChange ={props.onChange}\n    />\n</div>\n\n);\n\nconst TextInput = props =>(\n    <div className = {`${props.classdiv}`}>\n        <textarea onChange ={props.onChange} className = {`${props.classtext}`} name=\"text\" placeholder = {`${props.placeholder}`} cols=\"100\" rows=\"40\"/>\n    </div>\n);\n\nconst Button = props => (\n    <div className = {`${props.divclassname}`}>\n      <button className = {`${props.buttonclassname}`} type = {`${props.type}`}>{props.name}</button>\n    </div>\n  )\n\nexport default AddSong;"]},"metadata":{},"sourceType":"module"}