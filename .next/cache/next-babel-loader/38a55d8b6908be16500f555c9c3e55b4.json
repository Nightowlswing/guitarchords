{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/Songs/song.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component, createElement } from 'react';\nimport './SongStyle/SongStyle.css';\nimport Axios from 'axios';\n\nclass Song extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      song: [],\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    //        const router = useRouter()\n    //console.log(router.query)\n    var dir = window.location.pathname.substr(1);\n    console.log('window.innerHeight', ParseInt(dir));\n    Axios.get('http://localhost:3210/song', {\n      params: {\n        id: 1\n      }\n    }).then(response => {\n      this.setState({\n        song: response.data\n      });\n    });\n  }\n\n  render() {\n    // const router = useRouter()\n    //const {id} = router.query\n    return __jsx(\"div\", {\n      className: \"songText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(SongHead, {\n      compName: \"Billie Eilish\",\n      name: \"All The Good Girls Go to Hell\",\n      capo: \"4th fret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), this.state.song.map(value => {\n      return __jsx(SongText, {\n        text: value.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nconst SongHead = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, props.compName), __jsx(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, props.name)), __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, __jsx(\"h6\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"Capo: \", props.capo)), __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"----------------------------\"));\n\nconst SongText = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, props.text.map((value, index) => {\n  return __jsx(SongVerse, {\n    verse: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  });\n}));\n\nconst SongVerse = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, props.verse.map((value, index) => {\n  return __jsx(SongLine, {\n    line: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  });\n}), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}));\n\nconst SongLine = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, props.line.map((value, index) => {\n  return __jsx(WordBlock, {\n    words: value.words,\n    chord: value.chord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  });\n})), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}));\n\nconst WordBlock = props => __jsx(\"div\", {\n  className: \"word\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, props.chord, __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}), props.words, \"\\xA0\", __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}));\n\nexport default Song;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/Songs/song.jsx"],"names":["React","Component","createElement","Axios","Song","constructor","props","state","song","data","componentDidMount","dir","window","location","pathname","substr","console","log","ParseInt","get","params","id","then","response","setState","render","map","value","text","SongHead","compName","name","capo","SongText","index","SongVerse","verse","SongLine","line","words","chord","WordBlock"],"mappings":"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","sourcesContent":["import React, {Component, createElement} from 'react';\nimport './SongStyle/SongStyle.css';\nimport Axios from 'axios';\n\n\n\nclass Song extends Component{\n      constructor(props){\n\n        super(props)\n        this.state = {\n          song: [],\n          data: null\n        }\n      }     \n      \n     \n\n      componentDidMount(){\n//        const router = useRouter()\n        //console.log(router.query)\n        var dir = window.location.pathname.substr(1);\n        console.log('window.innerHeight',ParseInt(dir));\n        Axios.get('http://localhost:3210/song', {\n          params: {\n            id: 1 \n            \n          }\n          \n        }).then ((response) => { \n          this.setState({song: response.data})});   \n      }\n      render(){\n        \n       // const router = useRouter()\n        //const {id} = router.query\n      return(\n        <div className = \"songText\">\n         \n            <SongHead compName   = 'Billie Eilish' name = 'All The Good Girls Go to Hell' capo = '4th fret'/>\n           \n                {this.state.song.map((value) => {\n                    return (\n                        <SongText\n                        text = {value.text}\n                        />\n                    );\n                })}\n        </div>\n      );\n    }\n    \n}\n  \nconst SongHead = props =>(\n    <div>\n        <span><h1>{props.compName}</h1>\n        <h3>{props.name}</h3></span>\n        <span><h6>Capo: {props.capo}</h6></span>\n        <span>----------------------------</span>\n    </div>\n);\n\nconst SongText = props =>(\n  <div>\n    {props.text.map((value, index) => {\n      return(\n        <SongVerse verse = {value}/>\n      );\n    })}\n  </div>\n)\n\nconst SongVerse = props =>(\n    <div>\n      {props.verse.map((value,index)=>{\n        return (\n          <SongLine line = {value}/>\n        );\n      })}\n      <br/><br/>\n    </div>\n);\n\nconst SongLine = props =>(\n  <div>\n    <span>\n    {props.line.map((value,index) =>{\n      return(\n        <WordBlock words = {value.words} chord = {value.chord}/>\n      );\n    })}\n\n    </span>\n    <br/>\n  </div>\n);\n\nconst WordBlock = props =>(\n  <div className = \"word\">\n    {props.chord}<br/>\n    {props.words}&nbsp;\n    <br/>\n  </div>\n);\nexport default Song;\n"]},"metadata":{},"sourceType":"module"}