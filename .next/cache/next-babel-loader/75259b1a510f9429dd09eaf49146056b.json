{"ast":null,"code":"export default function EditText(text) {\n  return norm1(text);\n}\n\nfunction norm1(text) {\n  ntext = text.split(\"@\");\n  S = '';\n\n  for (var i = 0; i < ntext.length; i++) {\n    S = S + ',' + norm2(ntext[i]);\n  }\n\n  S = '[' + S.substring(1, S.length - 5) + ']\t';\n  return S;\n}\n\nfunction norm2(verse) {\n  nverse = verse.split('$');\n  S = '';\n\n  for (var i = 0; i < nverse.length; i++) {\n    S = S + ',' + norm3(nverse[i]);\n  } //S = S.substr(1);\n\n\n  S = '[' + S.substring(1, S.length - 3) + ']\t';\n  return S;\n}\n\nfunction norm3(string) {\n  nstring = string.split(\"[\");\n  S = '';\n\n  for (var i = 0; i < nstring.length; i++) {\n    if (norm4(nstring[i]) !== 'NONE') {\n      S = S + ',' + norm4(nstring[i]);\n    }\n  }\n\n  S = S.substr(1);\n  S = '[' + S + ']'; // if(S == ''){\n  // \tS = 'NONE';\n  // }\n\n  return S;\n}\n\nfunction norm4(chordword) {\n  data = chordword.split(\"]\");\n\n  if (data[1] !== undefined) {\n    return \"{\\\"chord\\\":\\\"\" + data[0] + \"\\\",\\\"words\\\":\\\"\" + data[1] + \"\\\"}\";\n  } else {\n    return 'NONE';\n  }\n}","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/EditText/editText.js"],"names":["EditText","text","norm1","ntext","split","S","i","length","norm2","substring","verse","nverse","norm3","string","nstring","norm4","substr","chordword","data","undefined"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACnC,SAAOC,KAAK,CAACD,IAAD,CAAZ;AACD;;AAGD,SAASC,KAAT,CAAeD,IAAf,EAAoB;AAChBE,EAAAA,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAR;AACAC,EAAAA,CAAC,GAAG,EAAJ;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,KAAK,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EACA;AACID,IAAAA,CAAC,GAAGA,CAAC,GAAG,GAAJ,GAAUG,KAAK,CAACL,KAAK,CAACG,CAAD,CAAN,CAAnB;AACH;;AACDD,EAAAA,CAAC,GAAG,MAAMA,CAAC,CAACI,SAAF,CAAY,CAAZ,EAAcJ,CAAC,CAACE,MAAF,GAAW,CAAzB,CAAN,GAAoC,IAAxC;AACA,SAAQF,CAAR;AACH;;AAED,SAASG,KAAT,CAAeE,KAAf,EAAqB;AACjBC,EAAAA,MAAM,GAAGD,KAAK,CAACN,KAAN,CAAY,GAAZ,CAAT;AACAC,EAAAA,CAAC,GAAG,EAAJ;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGK,MAAM,CAACJ,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAE9BD,IAAAA,CAAC,GAAGA,CAAC,GAAG,GAAJ,GAAUO,KAAK,CAACD,MAAM,CAACL,CAAD,CAAP,CAAnB;AACP,GANgB,CAOjB;;;AACID,EAAAA,CAAC,GAAG,MAAMA,CAAC,CAACI,SAAF,CAAY,CAAZ,EAAcJ,CAAC,CAACE,MAAF,GAAW,CAAzB,CAAN,GAAoC,IAAxC;AACJ,SAAOF,CAAP;AACH;;AAED,SAASO,KAAT,CAAeC,MAAf,EAAsB;AAClBC,EAAAA,OAAO,GAAGD,MAAM,CAACT,KAAP,CAAa,GAAb,CAAV;AACAC,EAAAA,CAAC,GAAG,EAAJ;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGQ,OAAO,CAACP,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnC,QAAGS,KAAK,CAACD,OAAO,CAACR,CAAD,CAAR,CAAL,KAAoB,MAAvB,EAA8B;AAC1BD,MAAAA,CAAC,GAAGA,CAAC,GAAG,GAAJ,GAAUU,KAAK,CAACD,OAAO,CAACR,CAAD,CAAR,CAAnB;AACH;AACJ;;AACDD,EAAAA,CAAC,GAAGA,CAAC,CAACW,MAAF,CAAS,CAAT,CAAJ;AACAX,EAAAA,CAAC,GAAG,MAAMA,CAAN,GAAU,GAAd,CATkB,CAUlB;AACA;AACA;;AACA,SAAOA,CAAP;AACH;;AAED,SAASU,KAAT,CAAeE,SAAf,EAAyB;AACrBC,EAAAA,IAAI,GAAGD,SAAS,CAACb,KAAV,CAAgB,GAAhB,CAAP;;AACA,MAAIc,IAAI,CAAC,CAAD,CAAJ,KAAYC,SAAhB,EAA0B;AACtB,WAAO,kBAAeD,IAAI,CAAC,CAAD,CAAnB,uBAAwCA,IAAI,CAAC,CAAD,CAA5C,QAAP;AACH,GAFD,MAIA;AACI,WAAO,MAAP;AACH;AACJ","sourcesContent":["export default function EditText(text) {\n    return norm1(text);\n  }\n  \n  \n  function norm1(text){\n      ntext = text.split(\"@\");\n      S = ''\n      for(var i = 0; i < ntext.length; i++)\n      {\n          S = S + ',' + norm2(ntext[i]);\n      }\n      S = '[' + S.substring(1,S.length - 5) + ']\t';\n      return  S;\n  }\n  \n  function norm2(verse){\n      nverse = verse.split('$');\n      S = ''\n      for(var i = 0; i < nverse.length; i++){\n  \n              S = S + ',' + norm3(nverse[i]);\n      }\n      //S = S.substr(1);\n          S = '[' + S.substring(1,S.length - 3) + ']\t';\n      return S;\n  }\n  \n  function norm3(string){\n      nstring = string.split(\"[\");\n      S = ''\n      for(var i = 0; i < nstring.length; i++){\n          if(norm4(nstring[i])!=='NONE'){\n              S = S + ',' + norm4(nstring[i]);\n          }\n      }\n      S = S.substr(1);\n      S = '[' + S + ']'\n      // if(S == ''){\n      // \tS = 'NONE';\n      // }\n      return S;\n  }\n  \n  function norm4(chordword){\n      data = chordword.split(\"]\");\n      if (data[1] !== undefined){\n          return `{\"chord\":\"` + data[0] + `\",\"words\":\"`+ data[1] +`\"}`;\n      }\n      else\n      {\n          return 'NONE';\n      }\n  }"]},"metadata":{},"sourceType":"module"}