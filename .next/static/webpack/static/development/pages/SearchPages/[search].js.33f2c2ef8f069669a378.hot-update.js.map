{"version":3,"file":"static/webpack/static/development/pages/SearchPages/[search].js.33f2c2ef8f069669a378.hot-update.js","sources":["webpack:///./components/Search/SearchResults.jsx"],"sourcesContent":["import React, {Component, createElement} from 'react';\n//import '../../Styles/SongStyle/SongStyle.css';\nimport Axios from 'axios';\nimport Link from 'next/link';\nimport EditDir from './EditDir/EditDir'; \nimport ArticleCut from '../Articles/ArticleCut/ArticleCut';\nimport '../../Styles/SearchStyle/SearchResault.css';\nimport '../../Styles/global.css';\n\nclass SearchResault extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            compositors: [],\n            songs:[],\n            articles:[],\n            Compositors: false,\n            Songs: false,\n            Articles: false\n        }\n    }\n\n    // handleClick = e =>{\n    //     e.preventDefault();\n    //     const {name, value} = e.target;\n\n    //     if(this.state.name){\n    //         e.target.style.backgroundColor = '#60f78a';\n    //         this.setState({name: false})\n            \n    //         document.getElementById(name).style.display = 'none';\n    //     }\n    //     else{\n    //         e.target.style.backgroundColor = '#8fffae';\n    //         this.setState({name: true})\n    //         document.getElementById(name).style.display = 'block';\n    //     }\n    // }\n    componentDidMount(){\n        const dir = EditDir(window.location.pathname);\n        alert('h')\n        Axios.get('http://localhost:3210/searchC',{params: { Q: dir }}).then ((response) => { this.setState({compositors: response.data})});\n        Axios.get('http://localhost:3210/searchS',{params: { Q: dir }}).then ((response) => { this.setState({songs: response.data})});\n        Axios.get('http://localhost:3210/searchA',{params: { Q: dir }}).then ((response) => { this.setState({articles: response.data})});\n    }\n    render(){\n        return(\n            <div >\n                {/* <div className = 'optionButtons'>\n                    <Button  divclassname = 'buttonDiv' buttonclassname = 'optionButton' type = 'button' name = 'Songs' onClick = {this.handleClick}/>\n                    <Button  divclassname = 'buttonDiv' buttonclassname = 'optionButton' type = 'button' name = 'Compositors' onClick = {this.handleClick}/>\n                    <Button  divclassname = 'buttonDiv' buttonclassname = 'optionButton' type = 'button' name = 'Articles' onClick = {this.handleClick}/>\n                </div> */}\n                <div className = 'LightDiv'>\n                    <div id = 'Compositors'>\n                        <ul className = 'searchResults'>\n                            {this.state.compositors.map((value) => {\n                                return (\n                                    <CompRef\n                                    id = {value.id}\n                                    cname = {value.cname}\n                                    />\n                                );\n                            })}\n                        </ul> \n                    </div> \n\n                <div id = \"Songs\">\n                    <ul className = 'searchResults'>\n                        {this.state.songs.map((value) => {\n                            return (\n                                <SongRef\n                                id = {value.id}\n                                name = {value.name}\n                                cname = {value.cname}\n                                />\n                            );\n                        })}\n                    </ul>  \n                </div>                           \n                <div id = \"Articles\">                     \n                    <ul className = 'searchResults'>\n                        {this.state.articles.map((value) => {\n                            return (\n                                <ArticleRef\n                                id = {value.id}\n                                name = {value.name}\n                                text = {value.text}\n                                />\n                            );\n                        })}\n                    </ul>            \n                </div>\n            </div>\n        </div>\n            \n        );\n    }\n\n    \n    \n}\n\nconst Button = props => (\n    <div className = {`${props.divclassname}`}>\n      <button name ={`${props.name}`} className = {`${props.buttonclassname}`} type = {`${props.type}`}  onClick = {props.onClick}>{props.name}</button>\n    </div>\n  )\n\nconst CompRef = props =>(\n    <Link href = '/CompPages/[comp]' as ={`/CompPages/${props.id}`}>\n        <li className = 'searchResult'><a><i>Compositor:</i> {props.cname}</a></li>\n    </Link>\n);\n\nconst SongRef = props =>(\n    <Link href = '/[song]/' as ={`/${props.id}`}>\n        <li className = 'searchResult'><a><i>Song:</i> {props.name}</a></li>\n    </Link>\n);\n\nconst ArticleRef = props =>(\n    <div className = 'articleBlock'>\n    <span>\n    <h6>\n    <Link href = '/Articles/[article]' as ={`/Articles/${props.id}`}>\n        <li className = 'searchResult headLine'><a> <i>Article:</i> {props.name}</a></li>\n    </Link>\n    </h6>\n    </span>\n    <div className = 'subResaults'>\n        {ArticleCut(props.text)}\n    </div>\n    </div>\n);\n\nexport default SearchResault;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AADA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAOA;;;;AAxcA;;;;A","sourceRoot":""}