{"ast":null,"code":"var _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/Songs/SongList.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component, createElement } from 'react';\nimport '../../Styles/SongStyle/SongStyle.css';\nimport Axios from 'axios';\nimport Link from 'next/link';\n\nclass SongList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songs: [],\n      comp: []\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:3210/allSongs').then(response => {\n      this.setState({\n        songs: response.data\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(Ul, {\n      data: this.props.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Ul = props => data.map(value => {\n  return __jsx(SongRef, {\n    name: value.name,\n    comp_id: value.comp_id,\n    id: value.id,\n    cname: value.cname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n});\n\nconst SongRef = props => __jsx(Link, {\n  href: \"/[song]/\",\n  as: `/${props.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, props.cname, \" - \", props.name)));\n\nexport default SongList;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/Songs/SongList.jsx"],"names":["React","Component","createElement","Axios","Link","SongList","constructor","props","state","songs","comp","componentDidMount","get","then","response","setState","data","render","Ul","map","value","name","comp_id","id","cname","SongRef"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,aAA1B,QAA8C,OAA9C;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAgC;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAE;AACfR,IAAAA,KAAK,CAACS,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAmDC,QAAD,IAAc;AAAE,WAAKC,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEK,QAAQ,CAACE;AAAjB,OAAd;AAAsC,KAAxG;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,EAAD;AAAI,MAAA,IAAI,EAAI,KAAKV,KAAL,CAAWC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAlB2B;;AAqBhC,MAAMU,EAAE,GAAGX,KAAK,IACZS,IAAI,CAACG,GAAL,CAAUC,KAAD,IAAW;AAChB,SAEI,MAAC,OAAD;AACA,IAAA,IAAI,EAAIA,KAAK,CAACC,IADd;AAEA,IAAA,OAAO,EAAID,KAAK,CAACE,OAFjB;AAGA,IAAA,EAAE,EAAIF,KAAK,CAACG,EAHZ;AAIA,IAAA,KAAK,EAAIH,KAAK,CAACI,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AASH,CAVD,CADJ;;AAcA,MAAMC,OAAO,GAAGlB,KAAK,IACjB,MAAC,IAAD;AAAM,EAAA,IAAI,EAAG,UAAb;AAAwB,EAAA,EAAE,EAAI,IAAGA,KAAK,CAACgB,EAAG,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIhB,KAAK,CAACiB,KAAV,SAAoBjB,KAAK,CAACc,IAA1B,CAAJ,CADJ,CADJ;;AAMA,eAAehB,QAAf","sourcesContent":["import React, {Component, createElement} from 'react';\nimport '../../Styles/SongStyle/SongStyle.css';\nimport Axios from 'axios';\nimport Link from 'next/link';\n\n\nclass SongList extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n          songs: [],\n          comp: []\n        }\n    }     \n    componentDidMount(){\n        Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n    \n    render(){\n        return(\n            <ul>\n                <Ul data = {this.props.state}/>\n            </ul>\n        );\n    }\n}\n\nconst Ul = props =>(\n    data.map((value) => {\n        return (\n            \n            <SongRef\n            name = {value.name}\n            comp_id = {value.comp_id}\n            id = {value.id}\n            cname = {value.cname}\n            />\n        );\n    })\n);\n\nconst SongRef = props =>(\n    <Link href = '/[song]/' as ={`/${props.id}`}>\n        <li><a>{props.cname} - {props.name}</a></li>\n    </Link>\n);\n\nexport default SongList;"]},"metadata":{},"sourceType":"module"}