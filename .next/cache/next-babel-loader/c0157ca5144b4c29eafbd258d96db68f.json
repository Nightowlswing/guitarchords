{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\nimport EditText from './EditText/editText';\n\nclass AddSong extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n\n      switch (name) {\n        case 'cname':\n          this.setState({\n            cname: value\n          });\n          break;\n\n        case 'sname':\n          this.setState({\n            sname: value\n          });\n          break;\n\n        case 'capo':\n          this.setState({\n            capo: value\n          });\n          break;\n\n        case 'genre':\n          this.setState({\n            genre: value\n          });\n          break;\n\n        case 'text':\n          this.setState({\n            text: value\n          });\n          break;\n      }\n    });\n\n    this.state = {\n      cname: null,\n      sname: null,\n      capo: null,\n      text: null,\n      genre: null\n    };\n  }\n\n  componentDidMount() {// Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"whiteBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(LineInput, {\n      onChange: this.onChange,\n      type: \"compname\",\n      placeholder: \"Name of compositor\",\n      name: \"cname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), __jsx(LineInput, {\n      onChange: this.onChange,\n      type: \"songname\",\n      placeholder: \"Name of song\",\n      name: \"sname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), __jsx(LineInput, {\n      onChange: this.onChange,\n      type: \"capo\",\n      placeholder: \"Capo\",\n      name: \"capo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), __jsx(LineInput, {\n      onChange: this.onChange,\n      type: \"genre\",\n      placeholder: \"Genre\",\n      name: \"genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), __jsx(Button, {\n      divclassname: \"SingIn\",\n      buttonclassname: \"SubmitButton\",\n      type: \"submit\",\n      name: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), __jsx(TextInput, {\n      onChange: this.onChange,\n      classdiv: \"textblock\",\n      classtext: \"classtext\",\n      placeholder: \"Song's Text\",\n      name: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst LineInput = props => __jsx(\"input\", {\n  type: `${props.type}`,\n  className: \"FormInput\",\n  placeholder: `${props.placeholder}`,\n  name: `${props.name}`,\n  onChange: props.onChange,\n  noValidate: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n});\n\nconst TextInput = props => __jsx(\"div\", {\n  className: `${props.classdiv}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, __jsx(\"textarea\", {\n  className: `${props.classtext}`,\n  name: \"text\",\n  placeholder: `${props.placeholder}`,\n  cols: \"100\",\n  rows: \"40\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}));\n\nconst Button = props => __jsx(\"div\", {\n  className: `${props.divclassname}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, __jsx(\"button\", {\n  className: `${props.buttonclassname}`,\n  type: `${props.type}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, props.name));\n\nexport default AddSong;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx"],"names":["React","Component","Link","useRouter","FormText","Axios","EditText","AddSong","constructor","props","e","preventDefault","name","value","target","setState","cname","sname","capo","genre","text","state","componentDidMount","render","handleSubmit","onChange","LineInput","type","placeholder","TextInput","classdiv","classtext","Button","divclassname","buttonclassname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\nimport EditText from './EditText/editText';\n\nclass AddSong extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            cname: null,\n            sname: null,\n            capo: null,\n            text: null,\n            genre: null\n        }\n    } \n    \n    handleSubmit = e => {\n        e.preventDefault();\n        \n    };\n\n    handleChange = e => {\n        e.preventDefault();\n        const {name, value} = e.target;\n        switch(name) {\n            case 'cname':\n                this.setState({cname: value});\n                break;\n            case 'sname':\n                this.setState({sname: value});\n                break;\n            case 'capo':\n                this.setState({capo: value});\n            break;\n            case 'genre':\n                this.setState({genre: value});\n            break;\n            case 'text':\n                this.setState({text: value});\n            break;\n        }\n    }\n    \n    componentDidMount(){\n       // Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n    render(){\n        return(\n \n            <div className = \"whiteBlock\">\n                <form onSubmit = {this.handleSubmit}>\n                    <LineInput onChange = {this.onChange} type = 'compname' placeholder = 'Name of compositor' name = 'cname'/>\n                    <LineInput onChange = {this.onChange} type = 'songname' placeholder = 'Name of song' name = 'sname'/>\n                    <LineInput onChange = {this.onChange} type = 'capo' placeholder = 'Capo' name = 'capo'/>\n                    <LineInput onChange = {this.onChange} type = 'genre' placeholder = 'Genre' name = 'genre'/>\n                    <Button divclassname = 'SingIn' buttonclassname = 'SubmitButton' type = 'submit' name = 'submit'/>\n                    <TextInput onChange = {this.onChange} classdiv = 'textblock' classtext = 'classtext' placeholder = \"Song's Text\" name = 'text'/>\n                </form>\n            </div>\n\n        );\n    }\n   \n}\n\nconst LineInput = props =>(\n    <input \n    type = {`${props.type}`}\n    className = 'FormInput' \n    placeholder = {`${props.placeholder}`}\n    name = {`${props.name}`}\n    onChange = {props.onChange}\n    noValidate  \n    />\n\n);\n\nconst TextInput = props =>(\n    <div className = {`${props.classdiv}`}>\n        <textarea className = {`${props.classtext}`} name=\"text\" placeholder = {`${props.placeholder}`} cols=\"100\" rows=\"40\"/>\n    </div>\n);\n\nconst Button = props => (\n    <div className = {`${props.divclassname}`}>\n      <button className = {`${props.buttonclassname}`} type = {`${props.type}`}>{props.name}</button>\n    </div>\n  )\n\nexport default AddSong;"]},"metadata":{},"sourceType":"module"}