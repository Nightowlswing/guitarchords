{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/Login/LoginComponents/Form.jsx\";\nvar __jsx = React.createElement;\nimport { store } from 'react-notifications-component';\nimport React, { Component } from 'react';\nimport GreenLine from \"./GreenLine\";\nimport Link from 'next/link'; //import '../../styles/FormStyles/Form.css';\n\nimport { useRouter } from 'next/router';\n\nconst formValid = formErrors => {\n  let valid = true;\n\n  _Object$values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  return valid;\n};\n\nconst emeilRegex = RegExp(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/);\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      this.setState({\n        isWaiting: true\n      });\n      setTimeout(() => {\n        this.setState({\n          isWaiting: false\n        });\n      }, 2000);\n\n      if (formValid(this.state.formErrors)) {\n        store.addNotification({\n          title: 'Synced',\n          message: 'User data checking...',\n          type: 'warning',\n          container: 'top-center',\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 3000\n          }\n        });\n      } else {\n        store.addNotification({\n          title: 'Wrong e-mail or password',\n          message: 'Please, type correct data',\n          type: 'warning',\n          container: 'top-center',\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 3000\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case 'Email':\n          formErrors.email = emeilRegex.test(value) && value.length > 0 ? \"\" : 'invalid email';\n          break;\n\n        case 'Password':\n          formErrors.password = value < 6 && value.length > 0 ? 'minimum 6 characters' : \"\";\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log());\n    });\n\n    this.state = {\n      email: null,\n      password: null,\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      },\n      isWaiting: false\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"SingIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(Input, {\n      onChange: this.handleChange,\n      name: \"Email\",\n      placeholder: \"user@mail.com\",\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), __jsx(Input, {\n      name: \"Password\",\n      placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), __jsx(Ref, {\n      divclassname: \"ForgotPassword\",\n      aclassname: \"refForgotPassword\",\n      text: \"Forgot Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), __jsx(Button, {\n      divclassname: \"SingIn\",\n      buttonclassname: \"SubmitButton\",\n      type: \"submit\",\n      name: \"sing in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst Input = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: `${props.name}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}, __jsx(\"label\", {\n  className: \"FormLabel\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}, props.name), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}), __jsx(\"input\", {\n  type: `${props.type}`,\n  className: \"FormInput\",\n  placeholder: `${props.placeholder}`,\n  name: `${props.name}`,\n  noValidate: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121\n  },\n  __self: this\n})), __jsx(GreenLine, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}));\n\nconst Ref = props => __jsx(Link, {\n  href: `${props.ref}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: `${props.divclassname}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: `${props.aclassname}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139\n  },\n  __self: this\n}, props.text)));\n\nconst Button = props => __jsx(\"div\", {\n  className: `${props.divclassname}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}, __jsx(\"button\", {\n  className: `${props.buttonclassname}`,\n  type: `${props.type}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146\n  },\n  __self: this\n}, props.name));\n\nexport default Form;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/Login/LoginComponents/Form.jsx"],"names":["store","React","Component","GreenLine","Link","useRouter","formValid","formErrors","valid","forEach","val","length","emeilRegex","RegExp","Form","constructor","props","e","preventDefault","setState","isWaiting","setTimeout","state","addNotification","title","message","type","container","animationIn","animationOut","dismiss","duration","name","value","target","email","test","password","console","log","render","handleSubmit","handleChange","Input","placeholder","Ref","ref","divclassname","aclassname","text","Button","buttonclassname"],"mappings":"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","sourcesContent":["import { store } from 'react-notifications-component';\nimport React, { Component } from 'react'\nimport GreenLine from \"./GreenLine\";\nimport Link from 'next/link';\n//import '../../styles/FormStyles/Form.css';\nimport { useRouter } from 'next/router';\n\nconst formValid = formErrors =>{\n    let valid = true;\n\n    Object.values(formErrors).forEach(val => {\n        val.length > 0 && (valid = false)\n    });\n\n    return valid;\n}\n\n\n\nconst emeilRegex = RegExp(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/);\n\n\nclass Form extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            email: null,\n            password: null,\n            formErrors:{\n                email: \"\",\n                password: \"\"\n            },\n            isWaiting: false,\n        };\n\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.setState({isWaiting: true}); \n\n        setTimeout(() => {\n            this.setState({isWaiting: false});\n        }, 2000)\n\n        if (formValid(this.state.formErrors)) {\n            \n            store.addNotification({\n                title: 'Synced',\n                message: 'User data checking...',\n                type: 'warning',                        \n                container: 'top-center',               \n                animationIn: [\"animated\", \"fadeIn\"],     \n                animationOut: [\"animated\", \"fadeOut\"],   \n                dismiss: {\n                duration: 3000 \n                }\n            });\n        }\n        else {\n            store.addNotification({\n                title: 'Wrong e-mail or password',\n                message: 'Please, type correct data',\n                type: 'warning',                        \n                container: 'top-center',               \n                animationIn: [\"animated\", \"fadeIn\"],     \n                animationOut: [\"animated\", \"fadeOut\"],   \n                dismiss: {\n                duration: 3000 \n                }\n            });\n        }\n    };\n\n    handleChange = e => {\n        e.preventDefault();\n        const {name, value} = e.target;\n        let formErrors = this.state.formErrors;\n\n        switch(name) {\n            case 'Email':\n                formErrors.email = \n                    emeilRegex.test(value) && value.length > 0 \n                        ?\"\"\n                        :'invalid email';\n                break;\n            case 'Password':\n                    formErrors.password = \n                        value < 6 && value.length > 0 \n                            ?'minimum 6 characters'\n                            : \"\";\n                break;\n        }\n        this.setState({formErrors, [name]: value}, () => console.log());\n    }\n\n\n    render(){\n        return(\n            <div className = 'SingIn'>\n                \n\n                <form onSubmit = {this.handleSubmit} onChange = {this.handleChange} noValidate>\n                  <Input onChange = {this.handleChange} name = 'Email' placeholder = 'user@mail.com' type = 'email'/>\n                  <Input name = 'Password' placeholder = '••••••••' type = 'password'/>\n                  <Ref divclassname = 'ForgotPassword' aclassname = 'refForgotPassword' text = 'Forgot Password'/>\n                  <Button divclassname = 'SingIn' buttonclassname = 'SubmitButton' type = 'submit' name = 'sing in'/>\n                </form>\n                \n            </div>\n        \n        );\n    }\n}\n\n\nconst Input = props => (\n  <div>\n    <div className = {`${props.name}`}>\n        <label className= 'FormLabel'>{props.name}</label><br/>\n        <input \n        type = {`${props.type}`}\n        className = 'FormInput' \n        placeholder = {`${props.placeholder}`}\n        name = {`${props.name}`}\n        noValidate\n        \n        />\n          \n    </div>\n    <GreenLine />\n  </div>\n  );\n  \n  \n  const Ref = props => (\n    <Link href = {`${props.ref}`}>\n    <div className = {`${props.divclassname}`}>\n      <a className = {`${props.aclassname}`} >{props.text}</a>\n    </div>\n    </Link>\n  );\n  \n  const Button = props => (\n    <div className = {`${props.divclassname}`}>\n      <button className = {`${props.buttonclassname}`} type = {`${props.type}`}>{props.name}</button>\n    </div>\n  )\n  \n\n\nexport default Form; "]},"metadata":{},"sourceType":"module"}