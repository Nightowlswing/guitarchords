{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\n\nvar AddSong =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSong, _Component);\n\n  function AddSong(props) {\n    var _this;\n\n    _classCallCheck(this, AddSong);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddSong).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n    });\n\n    _this.state = {\n      cname: null,\n      sname: null,\n      capo: null,\n      text: null,\n      genre: null\n    };\n    return _this;\n  }\n\n  _createClass(AddSong, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"whiteBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(LineInput, {\n        type: \"compname\",\n        placeholder: \"Name of compositor\",\n        name: \"cname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        type: \"songname\",\n        placeholder: \"Name of song\",\n        name: \"sname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        type: \"capo\",\n        placeholder: \"Capo\",\n        name: \"capo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), __jsx(LineInput, {\n        type: \"genre\",\n        placeholder: \"Genre\",\n        name: \"genre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), __jsx(Button, {\n        divclassname: \"SingIn\",\n        buttonclassname: \"SubmitButton\",\n        type: \"submit\",\n        name: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), __jsx(TextInput, {\n        classdiv: \"textblock\",\n        classtext: \"classtext\",\n        placeholder: \"Song's Text\",\n        name: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddSong;\n}(Component);\n\nvar LineInput = function LineInput(props) {\n  return __jsx(\"input\", {\n    type: \"\".concat(props.type),\n    className: \"FormInput\",\n    placeholder: \"\".concat(props.placeholder),\n    name: \"\".concat(props.name),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n};\n\nvar TextInput = function TextInput(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.classdiv),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    className: \"\".concat(props.classtext),\n    name: \"text\",\n    placeholder: \"\".concat(props.placeholder),\n    cols: \"100\",\n    rows: \"40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nvar Button = function Button(props) {\n  return __jsx(\"div\", {\n    className: \"\".concat(props.divclassname),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"\".concat(props.buttonclassname),\n    type: \"\".concat(props.type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.name));\n};\n\nexport default AddSong;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/AddSong/AddSong.jsx"],"names":["React","Component","Link","useRouter","FormText","Axios","AddSong","props","e","preventDefault","state","cname","sname","capo","text","genre","handleSubmit","LineInput","type","placeholder","name","TextInput","classdiv","classtext","Button","divclassname","buttonclassname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport '../../Styles/AddSong.css';\nimport { FormText } from 'reactstrap';\nimport Axios from 'axios';\n\nclass AddSong extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            cname: null,\n            sname: null,\n            capo: null,\n            text: null,\n            genre: null\n        }\n    } \n    \n    handleSubmit = e => {\n        e.preventDefault();\n        \n    };\n    \n    componentDidMount(){\n       // Axios.get('http://localhost:3210/allSongs').then ((response) => { this.setState({songs: response.data})});\n    }\n    render(){\n        return(\n \n            <div className = \"whiteBlock\">\n                <form onSubmit = {this.handleSubmit}>\n                    <LineInput type = 'compname' placeholder = 'Name of compositor' name = 'cname'/>\n                    <LineInput type = 'songname' placeholder = 'Name of song' name = 'sname'/>\n                    <LineInput type = 'capo' placeholder = 'Capo' name = 'capo'/>\n                    <LineInput type = 'genre' placeholder = 'Genre' name = 'genre'/>\n                    <Button divclassname = 'SingIn' buttonclassname = 'SubmitButton' type = 'submit' name = 'submit'/>\n                    <TextInput classdiv = 'textblock' classtext = 'classtext' placeholder = \"Song's Text\" name = 'text'/>\n                </form>\n            </div>\n\n        );\n    }\n   \n}\n\nconst LineInput = props =>(\n    <input \n    type = {`${props.type}`}\n    className = 'FormInput' \n    placeholder = {`${props.placeholder}`}\n    name = {`${props.name}`}\n    noValidate  \n    />\n\n);\n\nconst TextInput = props =>(\n    <div className = {`${props.classdiv}`}>\n        <textarea className = {`${props.classtext}`} name=\"text\" placeholder = {`${props.placeholder}`} cols=\"100\" rows=\"40\"/>\n    </div>\n);\n\nconst Button = props => (\n    <div className = {`${props.divclassname}`}>\n      <button className = {`${props.buttonclassname}`} type = {`${props.type}`}>{props.name}</button>\n    </div>\n  )\n\nexport default AddSong;"]},"metadata":{},"sourceType":"module"}