{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/oem/Documents/Development/Courswork/guitarchords/components/Search/SearchResults.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component, createElement } from 'react'; //import '../../Styles/SongStyle/SongStyle.css';\n\nimport Axios from 'axios';\nimport Link from 'next/link';\nimport EditDir from './EditDir/EditDir';\nimport ArticleCut from '../Articles/ArticleCut/ArticleCut';\nimport '../../Styles/SearchStyle/SearchResault.css';\nimport '../../Styles/global.css';\n\nclass SearchResault extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClick\", e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n\n      if (this.state.name) {\n        e.target.style.backgroundColor = '#60f78a';\n        this.setState({\n          name: false\n        });\n        document.getElementById(name).style.display = 'none';\n      } else {\n        e.target.style.backgroundColor = '#8fffae';\n        this.setState({\n          name: true\n        });\n        document.getElementById(name).style.display = 'block';\n      }\n    });\n\n    this.state = {\n      compositors: [],\n      songs: [],\n      articles: [],\n      Compositors: false,\n      Songs: false,\n      Articles: false\n    };\n  }\n\n  componentDidMount() {\n    const dir = EditDir(window.location.pathname);\n    Axios.get('http://localhost:3210/searchC', {\n      params: {\n        Q: dir\n      }\n    }).then(response => {\n      this.setState({\n        compositors: response.data\n      });\n    });\n    Axios.get('http://localhost:3210/searchS', {\n      params: {\n        Q: dir\n      }\n    }).then(response => {\n      this.setState({\n        songs: response.data\n      });\n    });\n    Axios.get('http://localhost:3210/searchA', {\n      params: {\n        Q: dir\n      }\n    }).then(response => {\n      this.setState({\n        articles: response.data\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"optionButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(Button, {\n      divclassname: \"buttonDiv\",\n      buttonclassname: \"optionButton\",\n      type: \"button\",\n      name: \"Songs\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(Button, {\n      divclassname: \"buttonDiv\",\n      buttonclassname: \"optionButton\",\n      type: \"button\",\n      name: \"Compositors\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(Button, {\n      divclassname: \"buttonDiv\",\n      buttonclassname: \"optionButton\",\n      type: \"button\",\n      name: \"Articles\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"bigSearchDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      id: \"Compositors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"LightDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.compositors.map(value => {\n      return __jsx(CompRef, {\n        id: value.id,\n        cname: value.cname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    })))), __jsx(\"div\", {\n      id: \"Songs\",\n      className: \"dynamicDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"LightDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.songs.map(value => {\n      return __jsx(SongRef, {\n        id: value.id,\n        name: value.name,\n        cname: value.cname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }))), __jsx(\"div\", {\n      id: \"Articles\",\n      className: \"dynamicDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"LightDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.articles.map(value => {\n      return __jsx(ArticleRef, {\n        id: value.id,\n        name: value.name,\n        text: value.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    }))))));\n  }\n\n}\n\nconst Button = props => __jsx(\"div\", {\n  className: `${props.divclassname}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, __jsx(\"button\", {\n  name: `${props.name}`,\n  className: `${props.buttonclassname}`,\n  type: `${props.type}`,\n  onClick: props.onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, props.name));\n\nconst CompRef = props => __jsx(Link, {\n  href: \"/CompPages/[comp]\",\n  as: `/CompPages/${props.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}, __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, props.cname)));\n\nconst SongRef = props => __jsx(Link, {\n  href: \"/[song]/\",\n  as: `/${props.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122\n  },\n  __self: this\n}, __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, props.name)));\n\nconst ArticleRef = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128\n  },\n  __self: this\n}, __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n}, __jsx(\"h6\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/Articles/[article]\",\n  as: `/Articles/${props.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}, __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, props.name))))), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}, ArticleCut(props.text)));\n\nexport default SearchResault;","map":{"version":3,"sources":["/home/oem/Documents/Development/Courswork/guitarchords/components/Search/SearchResults.jsx"],"names":["React","Component","createElement","Axios","Link","EditDir","ArticleCut","SearchResault","constructor","props","e","preventDefault","name","value","target","state","style","backgroundColor","setState","document","getElementById","display","compositors","songs","articles","Compositors","Songs","Articles","componentDidMount","dir","window","location","pathname","get","params","Q","then","response","data","render","handleClick","map","id","cname","text","Button","divclassname","buttonclassname","type","onClick","CompRef","SongRef","ArticleRef"],"mappings":"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","sourcesContent":["import React, {Component, createElement} from 'react';\n//import '../../Styles/SongStyle/SongStyle.css';\nimport Axios from 'axios';\nimport Link from 'next/link';\nimport EditDir from './EditDir/EditDir'; \nimport ArticleCut from '../Articles/ArticleCut/ArticleCut';\nimport '../../Styles/SearchStyle/SearchResault.css';\nimport '../../Styles/global.css';\n\nclass SearchResault extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            compositors: [],\n            songs:[],\n            articles:[],\n            Compositors: false,\n            Songs: false,\n            Articles: false\n        }\n    }\n\n    handleClick = e =>{\n        e.preventDefault();\n        const {name, value} = e.target;\n\n        if(this.state.name){\n            e.target.style.backgroundColor = '#60f78a';\n            this.setState({name: false})\n            \n            document.getElementById(name).style.display = 'none';\n        }\n        else{\n            e.target.style.backgroundColor = '#8fffae';\n            this.setState({name: true})\n            document.getElementById(name).style.display = 'block';\n        }\n    }\n    componentDidMount(){\n        const dir = EditDir(window.location.pathname);\n        \n        Axios.get('http://localhost:3210/searchC',{params: { Q: dir }}).then ((response) => { this.setState({compositors: response.data})});\n        Axios.get('http://localhost:3210/searchS',{params: { Q: dir }}).then ((response) => { this.setState({songs: response.data})});\n        Axios.get('http://localhost:3210/searchA',{params: { Q: dir }}).then ((response) => { this.setState({articles: response.data})});\n    }\n    render(){\n        return(\n            <div >\n                <div className = 'optionButtons'>\n                    <Button  divclassname = 'buttonDiv' buttonclassname = 'optionButton' type = 'button' name = 'Songs' onClick = {this.handleClick}/>\n                    <Button  divclassname = 'buttonDiv' buttonclassname = 'optionButton' type = 'button' name = 'Compositors' onClick = {this.handleClick}/>\n                    <Button  divclassname = 'buttonDiv' buttonclassname = 'optionButton' type = 'button' name = 'Articles' onClick = {this.handleClick}/>\n                </div>\n                <div className = 'bigSearchDiv'>\n                <div id = 'Compositors'>\n                    <div className = 'LightDiv'>\n                        <ul>\n                            {this.state.compositors.map((value) => {\n                                return (\n                                    <CompRef\n                                    id = {value.id}\n                                    cname = {value.cname}\n                                    />\n                                );\n                            })}\n                        </ul>\n                    </div>\n                </div> \n                <div id = \"Songs\" className = 'dynamicDiv'>\n                    <div className = 'LightDiv'>\n                        <ul>\n                            {this.state.songs.map((value) => {\n                                return (\n                                    <SongRef\n                                    id = {value.id}\n                                    name = {value.name}\n                                    cname = {value.cname}\n                                    />\n                                );\n                            })}\n                        </ul>\n                    </div> \n                \n                <div id = \"Articles\" className = 'dynamicDiv'> \n                    <div className = 'LightDiv'></div>\n                        <ul>\n                            {this.state.articles.map((value) => {\n                                return (\n                                    <ArticleRef\n                                    id = {value.id}\n                                    name = {value.name}\n                                    text = {value.text}\n                                    />\n                                );\n                            })}\n                        </ul>\n                    </div> \n                </div>\n            </div>\n        </div>\n            \n        );\n    }\n\n    \n    \n}\n\nconst Button = props => (\n    <div className = {`${props.divclassname}`}>\n      <button name ={`${props.name}`} className = {`${props.buttonclassname}`} type = {`${props.type}`}  onClick = {props.onClick}>{props.name}</button>\n    </div>\n  )\n\nconst CompRef = props =>(\n    <Link href = '/CompPages/[comp]' as ={`/CompPages/${props.id}`}>\n        <li><a>{props.cname}</a></li>\n    </Link>\n);\n\nconst SongRef = props =>(\n    <Link href = '/[song]/' as ={`/${props.id}`}>\n        <li><a>{props.name}</a></li>\n    </Link>\n);\n\nconst ArticleRef = props =>(\n    <div>\n    <span>\n    <h6>\n    <Link href = '/Articles/[article]' as ={`/Articles/${props.id}`}>\n        <li><a>{props.name}</a></li>\n    </Link>\n    </h6>\n    </span>\n    <div>\n        {ArticleCut(props.text)}\n    </div>\n    </div>\n);\n\nexport default SearchResault;"]},"metadata":{},"sourceType":"module"}